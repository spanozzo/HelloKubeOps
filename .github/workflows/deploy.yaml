name: Build and Deploy

on:
  push:
    branches: 
      - main
    paths:
      - 'Dockerfile'

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Calculate Version
      id: versioning
      run: |
        # Fetch tags
        git fetch --depth=1 origin +refs/tags/*:refs/tags/*
        # Get latest tag
        LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
        # Default to v1.0.0 if no tag found
        LATEST_TAG=${LATEST_TAG:-v1.0.0}
        echo "Latest tag: $LATEST_TAG"
        # Extract version number parts
        IFS='.' read -ra VERSION_PARTS <<< "${LATEST_TAG#v}"
        MAJOR=${VERSION_PARTS[0]}
        MINOR=${VERSION_PARTS[1]}
        PATCH=${VERSION_PARTS[2]}
        # Increment patch version
        PATCH=$((PATCH+1))
        NEW_VERSION="v$MAJOR.$MINOR.$PATCH"
        echo "New version: $NEW_VERSION"
        # Set the new version as an output variable
        echo "::set-output name=version::$NEW_VERSION"

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/hello-world:${{ steps.versioning.outputs.version }}
        build-args: VERSION=${{ steps.versioning.outputs.version }}

    - name: Update Kubernetes manifests
      run: |
        git pull
        sed -i 's|image:\ ${{ secrets.DOCKER_HUB_USERNAME }}/hello-world:.*|image: \${{ secrets.DOCKER_HUB_USERNAME }}/hello-world:${{ steps.versioning.outputs.version }}|' k8s/manifests/deployment.yaml
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add k8s/manifests/deployment.yaml
        git commit -m "Update Kubernetes manifests to version ${{ steps.versioning.outputs.version }}"
        git push

    - name: Create and Push Tag
      if: success()
      run: |
        git tag ${{ steps.versioning.outputs.version }}
        git push origin ${{ steps.versioning.outputs.version }}